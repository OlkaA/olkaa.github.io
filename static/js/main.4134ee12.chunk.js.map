{"version":3,"sources":["assets/blue-quotes.svg","assets/smile.svg","assets/pink-quotes.svg","assets/cake.svg","components/slideOne/slideOne.jsx","components/slideTwo/slideTwo.jsx","components/slideThree/slideThree.jsx","components/slideFour/slideFour.jsx","components/slideFive/slideFive.jsx","components/carousel/carousel.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","SlideOne","className","src","BlueQuotes","alt","Smile","PinkQuotes","Cake","SlideThree","SlideFour","SlideFive","Carousel","props","showSlideShow","self","setTimeout","currentIndex","state","slides","length","setState","goToNextSlide","e","preventDefault","goToPrevSlide","goToSlide","index","this","map","slide","key","currentndex","onClick","currentindex","href","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4134ee12.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue-quotes.566d192a.svg\";","module.exports = __webpack_public_path__ + \"static/media/smile.e0d65ea3.svg\";","module.exports = __webpack_public_path__ + \"static/media/pink-quotes.e4739484.svg\";","module.exports = __webpack_public_path__ + \"static/media/cake.86602f00.svg\";","import React from \"react\";\r\nimport \"./slideOne.scss\";\r\nimport BlueQuotes from \"../../assets/blue-quotes.svg\";\r\nimport Smile from \"../../assets/smile.svg\";\r\n\r\nconst SlideOne = () => {\r\n  return (\r\n    \r\n    <div className=\"slide slide-one\">\r\n      <div className=\"quotes\">\r\n        <img src={BlueQuotes} alt=\"quotes\" />\r\n        <p className=\"main-text\">\r\n          This piece of software is <span className=\"colored\">the shit</span>,\r\n          I’ve never tried anything like it.\r\n        </p>\r\n      </div>\r\n      <div className=\"\">\r\n        <img src={Smile} alt=\"smile\" />\r\n        <p className=\"secondary-text\">Mr. Face</p>\r\n        <p className=\"sub-text\">Karma Guru @ Face Co™</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideOne;\r\n","import React from \"react\";\r\nimport \"./slideTwo.scss\";\r\nimport PinkQuotes from \"../../assets/pink-quotes.svg\";\r\nimport Cake from \"../../assets/cake.svg\";\r\n\r\nconst SlideOne = () => {\r\n  return (\r\n    <div className=\"slide slide-two\">\r\n      <div className=\"quotes\">\r\n        <img src={PinkQuotes} alt=\"quotes\" />\r\n        <p className=\"main-text\">\r\n          An experience that makes us feel like we’re covered in maple syrup –{\" \"}\r\n          <span className=\"colored\">It’s a good thing</span>\r\n        </p>\r\n      </div>\r\n      <div className=\"\">\r\n        <img src={Cake} alt=\"cake\" />\r\n        <p className=\"secondary-text\">\r\n          The whole team @ <br/> The Pancake Collective™\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideOne;\r\n","\r\n\r\nimport React from \"react\";\r\nimport \"./slideThree.scss\";\r\n\r\nconst SlideThree = () => {\r\n  return (\r\n    <div className=\"slide slide-three\">\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideThree;\r\n","\r\n\r\nimport React from \"react\";\r\nimport \"./slideFour.scss\";\r\n\r\nconst SlideFour = () => {\r\n  return (\r\n    <div className=\"slide slide-four\">\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideFour;\r\n","\r\n\r\nimport React from \"react\";\r\nimport \"./slideFive.scss\";\r\n\r\nconst SlideFive = () => {\r\n  return (\r\n    <div className=\"slide slide-five\">\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideFive;\r\n","import \"./carousel.scss\";\r\nimport React, { Component } from \"react\";\r\nimport SlideOne from \"../slideOne/slideOne\";\r\nimport SlideTwo from \"../slideTwo/slideTwo\";\r\nimport SlideThree from \"../slideThree/slideThree\";\r\nimport SlideFour from \"../slideFour/slideFour\";\r\nimport SlideFive from \"../slideFive/slideFive\";\r\n\r\nclass Carousel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentIndex: 0\r\n    };\r\n\r\n    this.slides = [\r\n      <SlideOne />,\r\n      <SlideTwo />,\r\n      <SlideThree />,\r\n      <SlideFour />,\r\n      <SlideFive />\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.showSlideShow();\r\n  }\r\n\r\n  showSlideShow = () => {\r\n    let self = this;\r\n    setTimeout(() => {\r\n      let currentIndex = self.state.currentIndex;\r\n      if (currentIndex < self.slides.length - 1) {\r\n        currentIndex++;\r\n        self.setState({ currentIndex });\r\n        self.showSlideShow();\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  goToNextSlide = e => {\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    let currentIndex = this.state.currentIndex;\r\n    if (currentIndex !== this.slides.length - 1) {\r\n      ++currentIndex;\r\n    }\r\n    this.setState({ currentIndex });\r\n  };\r\n\r\n  goToPrevSlide = e => {\r\n    e.preventDefault();\r\n\r\n    let currentIndex = this.state.currentIndex;\r\n    if (currentIndex !== 0) {\r\n      --currentIndex;\r\n    }\r\n    this.setState({ currentIndex });\r\n  };\r\n\r\n  goToSlide = index => {\r\n    this.setState({ currentIndex: index });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"wpapper\">\r\n          <div className=\"carousel\">\r\n            <ul className=\"carousel-slides\">\r\n              {this.slides.map((slide, index) => {\r\n                return (\r\n                  <li\r\n                    key={index}\r\n                    currentndex={this.state.currentIndex}\r\n                    className={\r\n                      index === this.state.currentIndex ? \" active\" : \"\"\r\n                    }\r\n                  >\r\n                    {slide}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n\r\n            <ul className=\"carousel-pagination\">\r\n              {this.slides.map((slide, index) => {\r\n                return (\r\n                  <li\r\n                    onClick={() => this.goToSlide(index)}\r\n                    currentindex={this.state.currentIndex}\r\n                    key={index}\r\n                    index={index}\r\n                    className={\r\n                      index === this.state.currentIndex ? \" active\" : \"\"\r\n                    }\r\n                  ></li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n\r\n          <ul className=\"pagination\">\r\n            <li>\r\n              <a href=\"\" onClick={this.goToPrevSlide}>\r\n                &lsaquo;\r\n              </a>\r\n            </li>\r\n            <li>{`${this.state.currentIndex + 1} of ${this.slides.length}`}</li>\r\n            <li>\r\n              <a href=\"\" onClick={this.goToNextSlide}>\r\n                &rsaquo;\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Carousel;\r\n","import React from 'react';import './App.css';\nimport Carousel from './components/carousel/carousel';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Ocean</h1>\n        <Carousel/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}